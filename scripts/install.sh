#!/bin/bash

# SEO Agent Library Installation Script
# Repository: https://github.com/TheWayWithin/SEO-AGENT
# Website: https://www.seoagent.work

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Banner
echo -e "${BLUE}"
echo "╔════════════════════════════════════════════╗"
echo "║       SEO AGENT LIBRARY INSTALLER          ║"
echo "║         Elite SEO Automation Suite         ║"
echo "╚════════════════════════════════════════════╝"
echo -e "${NC}"

# Check if running in correct directory
if [ ! -f "README.md" ] || [ ! -d ".claude" ]; then
    echo -e "${RED}Error: Please run this script from the SEO Agent Library root directory${NC}"
    exit 1
fi

# Check for Claude Code
echo -e "${YELLOW}Checking for Claude Code installation...${NC}"
if ! command -v claude-code &> /dev/null; then
    echo -e "${RED}Claude Code is not installed or not in PATH${NC}"
    echo "Please install Claude Code first: https://claude.ai/code"
    exit 1
fi
echo -e "${GREEN}✓ Claude Code detected${NC}"

# Create necessary directories
echo -e "${YELLOW}Setting up directory structure...${NC}"
mkdir -p .claude/agents
mkdir -p .claude/missions
mkdir -p .claude/config
mkdir -p docs
mkdir -p examples
mkdir -p scripts

# Install SEO agents from agents/ to .claude/agents/
echo -e "${YELLOW}Installing SEO agents...${NC}"
if [ -d "agents" ] && [ "$(ls -A agents/*.md 2>/dev/null | wc -l)" -gt 0 ]; then
    # Backup existing SEO agents if they exist
    if ls .claude/agents/seo-*.md 1> /dev/null 2>&1; then
        echo -e "${YELLOW}Backing up existing SEO agents...${NC}"
        mkdir -p .claude/agents/backup
        mv .claude/agents/seo-*.md .claude/agents/backup/ 2>/dev/null || true
    fi
    
    # Copy new agents
    cp agents/*.md .claude/agents/
    echo -e "${GREEN}✓ SEO agents installed to .claude/agents/${NC}"
else
    echo -e "${RED}Error: No SEO agents found in agents/ directory${NC}"
    echo "Please ensure the repository was cloned correctly"
    exit 1
fi

# Install missions (missions are already in .claude/missions/)
echo -e "${YELLOW}Checking mission templates...${NC}"
if [ -d ".claude/missions" ] && [ "$(ls -A .claude/missions/*.md 2>/dev/null | wc -l)" -gt 0 ]; then
    MISSION_COUNT=$(ls -1 .claude/missions/*.md 2>/dev/null | wc -l)
    echo -e "${GREEN}✓ $MISSION_COUNT mission templates found${NC}"
else
    echo -e "${RED}Warning: No mission templates found in .claude/missions/${NC}"
    echo "Missions may need to be created manually"
fi

# Create local settings file if not exists
if [ ! -f ".claude/settings.local.json" ]; then
    echo -e "${YELLOW}Creating local settings...${NC}"
    cat > .claude/settings.local.json <<EOF
{
  "project": "SEO Agent Library",
  "version": "1.0.0",
  "domain": "www.seoagent.work"
}
EOF
    echo -e "${GREEN}✓ Local settings created${NC}"
fi

# Setup configuration
echo -e "${YELLOW}Setting up configuration...${NC}"
if [ -f "examples/seoagent-work-config.yml" ]; then
    if [ ! -f ".claude/config/business-context.yml" ]; then
        cp examples/seoagent-work-config.yml .claude/config/business-context.yml
        echo -e "${GREEN}✓ Default configuration installed${NC}"
    else
        echo -e "${BLUE}ℹ Configuration already exists${NC}"
    fi
fi

# Create project plan template
if [ ! -f "project-plan.md" ]; then
    echo -e "${YELLOW}Creating project plan template...${NC}"
    cat > project-plan.md <<EOF
# SEO Agent Library - Project Plan

## Active Missions
- [ ] Initial setup and configuration
- [ ] Site audit for target domain
- [ ] Technical optimization
- [ ] Content strategy development

## Completed Tasks
- [x] SEO Agent Library installation

## Next Steps
1. Run site audit: \`/coord site-audit\`
2. Review findings
3. Execute technical fixes
4. Implement content strategy

---
*Generated by SEO Agent Library Installation*
EOF
    echo -e "${GREEN}✓ Project plan template created${NC}"
fi

# Validate installation
echo ""
echo -e "${YELLOW}Validating installation...${NC}"

ERRORS=0

# Check SEO agents specifically
SEO_AGENT_COUNT=$(ls -1 .claude/agents/seo-*.md 2>/dev/null | wc -l)
if [ "$SEO_AGENT_COUNT" -ge 6 ]; then
    echo -e "${GREEN}✓ $SEO_AGENT_COUNT SEO agents installed${NC}"
    echo "  • seo-strategist"
    echo "  • seo-technical"
    echo "  • seo-content"
    echo "  • seo-researcher"
    echo "  • seo-analyst"
    echo "  • seo-builder"
else
    echo -e "${RED}✗ Only $SEO_AGENT_COUNT SEO agents found (expected 6)${NC}"
    ERRORS=$((ERRORS + 1))
fi

# Check missions
MISSION_COUNT=$(ls -1 .claude/missions/*.md 2>/dev/null | wc -l)
if [ "$MISSION_COUNT" -ge 1 ]; then
    echo -e "${GREEN}✓ $MISSION_COUNT missions available${NC}"
else
    echo -e "${RED}✗ No missions found${NC}"
    ERRORS=$((ERRORS + 1))
fi

# Final status
echo ""
if [ $ERRORS -eq 0 ]; then
    echo -e "${GREEN}╔════════════════════════════════════════════╗${NC}"
    echo -e "${GREEN}║     INSTALLATION COMPLETED SUCCESSFULLY    ║${NC}"
    echo -e "${GREEN}╚════════════════════════════════════════════╝${NC}"
    echo ""
    echo -e "${BLUE}Next Steps:${NC}"
    echo "1. Start Claude Code in this directory"
    echo "2. Run your first audit: /coord site-audit"
    echo "3. Check the agents: @seo-strategist, @seo-technical, etc."
    echo ""
    echo -e "${BLUE}Documentation:${NC}"
    echo "• Quick Start: docs/QUICK-START.md"
    echo "• Agent Guide: docs/agent-guide.md"
    echo "• GitHub: https://github.com/TheWayWithin/SEO-AGENT"
    echo ""
    echo -e "${GREEN}Happy SEO Automation! 🚀${NC}"
else
    echo -e "${YELLOW}╔════════════════════════════════════════════╗${NC}"
    echo -e "${YELLOW}║    INSTALLATION COMPLETED WITH WARNINGS    ║${NC}"
    echo -e "${YELLOW}╚════════════════════════════════════════════╝${NC}"
    echo ""
    echo -e "${YELLOW}Some components may be missing. Please check:${NC}"
    echo "• Repository was cloned correctly"
    echo "• All files were downloaded"
    echo "• No files were corrupted"
    echo ""
    echo "For support, visit: https://github.com/TheWayWithin/SEO-AGENT/issues"
fi